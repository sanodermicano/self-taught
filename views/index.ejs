<!DOCTYPE html>
<html>

<head lang="en">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- search skills -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js"
        integrity="sha256-+C0A5Ilqmu4QcSPxrlGpaZxJ04VjsRjKu+G82kl5UJk=" crossorigin="anonymous"></script>
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/css/selectize.bootstrap3.min.css"
        integrity="sha256-ze/OEYGcFbPRmvCnrSeKbRTtjG4vGLHXgOqsyLFTRjg=" crossorigin="anonymous" />
    <!-- search skills -->

    <!-- Pure.css -->
    <!-- <link href="https://unpkg.com/purecss@2.0.6/build/pure-min.css"
        integrity="sha384-Uu6IeWbM+gzNVXJcM9XV3SohHtmWE+3VGi496jvgX1jyvDTXfdK+rfZc8C1Aehk5" crossorigin="anonymous">
        <link href="https://unpkg.com/purecss@2.0.6/build/grids-responsive-min.css"> -->
    <link rel="stylesheet" href="./styles/Pure.css">
    <link rel="stylesheet" href="./styles/PureResponsiveGrids.css">

    <meta http-equiv="Content-Security-Policy" content="script-src 'self' http://xxxx 'unsafe-inline' 'unsafe-eval';">
    <!-- <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- rating -->
    <link rel="stylesheet" href="./styles/jstarbox.css" type="text/css" media="screen" charset="utf-8">
    <script src="./scripts/jstarbox.js"></script>
    <!-- rating -->
    <!-- <link rel="stylesheet" href="./styles/starter-template.css"> -->
    <!-- <link rel="stylesheet" href="./styles/gradCSS.css"> -->
    <link rel="stylesheet" href="./styles/main.css">
    <link rel="icon" href="./img/self-taught.png">

    <script src="./scripts/nav.js"></script>
    <title>Self-Taught</title>
</head>

<body onbeforeunload="cleanData()">
    <pre id="output"></pre>
    <script src="./scripts/detectDevTools.js"></script>
    <script>
        window.addEventListener('devtoolschange', function (e) {
            if (e.detail.open) {
                //uncomment on release AHAHAHAHAHA
                // window.location.href = "https://youtu.be/dQw4w9WgXcQ";
                // $("html").empty();
            }
        });
    </script>
    <!-- source: loading source http://www.ajaxload.info/ -->
    <div id="loading" class="loading" style="display: none;">
        <h1 class="loadingtext">Please Wait...</h1>
        <h3 id="msg" class="loadingdesc">Searching</h3>
        <br>
        <img src="./img/loading.gif" alt="Loading..." width="25%" style="max-width: 100%;max-height: 100%;">
    </div>
    <main id="allContent">
        <!--Skills Section-->
        <div id="nextSkill" class="hideable">
            <span onclick=showAll() class="close" title="Close Modal">Ã—</span>
            <div class="hideablecontainer hideable-content">
                <h1>Next Skill!</h1>
                <p>Choose the Next Skill you want to Learn.</p>

                <div id="newSkillsContainer" class="clearfix">
                </div>
            </div>
        </div>
        <!-- <div class="grid-wrap"> -->
        <div class="pure-g">
            <div class="pure-u" style="width: 25%;min-width: fit-content;" id="skillsContainer">
                <img id="options-img" title="Skills List" class="collapsible fade" src="./img/myskillsimg2.png"
                    width="64" height="64" />
                <div class="skillsection skills" id="skils-section">
                    <div>
                        <div>
                            <form>
                                <!-- search skills & add skills -->
                                <% var skills; %>
                                <table style="width:100%">
                                    <tr>
                                        <td style="width:100%">
                                            <select id="select-skill" title="Select a Skill">
                                            </select>
                                        </td>
                                        <td>
                                            <img src="img/help.png" id="halp" width="16" height="16" class="fade"
                                                title="Learning Resources Difficulty: &#013;Level 1 & 2: Beginner&#013;Level 3: Intermediate&#013;Level 4: Advanced&#013;Level 5: Advanced + You Recieve a list of More Advanced Next Skills to Choose from&#013;&#013;Can't find the Skill you're looking for? Insert learning resources' links related to that skill and wait a day, the Skill you're looking for will be automatically added to the Skills List."
                                                alt="Help" />
                                        </td>
                                    </tr>
                                </table>

                                <script type="text/javascript">
                                    $(document).ready(function () {
                                        var skillSearch = $('#select-skill');
                                        skillSearch.append('<option value="">Select a Skill...</option>');

                                        var data = "<%- skills; %>".split(",");
                                        $.each(data, function (key, entry) {
                                            skillSearch.prepend($('<option></option>').attr(
                                                'value', entry).text(entry));
                                        });
                                        loadLinks();
                                        loadSkills();
                                        filterFadeBack();
                                        $("#filterall").fadeTo(150, 1);
                                        $("#ratingSort").children().hide();
                                        isFree();
                                        $("#select-skill").selectize({});
                                    });
                                    $("#select-skill").change(addSkills);

                                    var isLoading = true;
                                    var predictedSkill = "";
                                    var skillRange = 1;
                                    var skillIsOn = true;
                                    var skillID = 0;
                                    var skillsList = [];
                                    var skillsListBackup = [];
                                    var rangesListBackup = [];
                                    var positionsList = [];
                                    var rangesList = [];

                                    var skillsListFiltered = [];
                                    var rangesListFiltered = [];

                                    function addSkills() {
                                        if (predictedSkill == "" && !isLoading) {
                                            predictedSkill = $("#select-skill").val();
                                        }
                                        if (skillsListBackup.includes(predictedSkill) || predictedSkill == "") {
                                            if (!isLoading) {
                                                predictedSkill = "";
                                                return;
                                            }
                                        }
                                        $("#filters").hide();
                                        $("#paginator").hide();
                                        $("#learningResources").hide();
                                        $("#sResultsDiv").hide();

                                        //use prepend and instead but remember to mirror all skills list operations; unshift CRUD instead of pushing

                                        // $("#skills").prepend('<tr id="tr' + skillID +
                                        $("#skills").append('<tr id="tr' + skillID +
                                            '"><td class="skillscontent"><label class="container"><input type="checkbox" id="cb' +
                                            skillID +
                                            '" checked="checked"><span class="checkmark fade"></span></label></td><th id="th' +
                                            skillID +
                                            '" class="skills">' +
                                            predictedSkill +
                                            '</th><td class="skillscontent"><input type="range" min="1" max="5" value="' +
                                            skillRange + '" ' +
                                            'id="range' + skillID +
                                            '" class="slider"></td><td class="skillscontent">Level: <span id="level' +
                                            skillID + '">' + skillRange +
                                            '</span></td>' +
                                            '<td class="skillscontent"><img width="20" height="20" class="fade" style="margin-left: 5px;" alt="Delete Skill" src="img/delete.png" id="del' +
                                            skillID + '"></td></tr>');
                                        $("#wdiln").hide().fadeIn();
                                        $("#tr" + skillID).hide().fadeIn();
                                        $("#cb" + skillID).click(function () {
                                            var thisID = String($(this).attr('id')).substring('cb'
                                                .length);
                                            var position = Array.prototype.slice.call(document
                                                .getElementById(
                                                    'skills').children).indexOf(document.getElementById(
                                                'tr' +
                                                thisID));
                                            //backhere
                                            if ($(this).is(':checked')) {
                                                $("#tr" + thisID).fadeTo(150, 1)
                                                skillsListFiltered[position] = skillsListBackup[position];
                                                rangesListFiltered[position] = rangesListBackup[position];
                                                if (!isLoading) {
                                                    switchSkillSQL(skillsListBackup[position], 1);
                                                }
                                            } else {
                                                $("#tr" + thisID).fadeTo(150, 0.4);
                                                skillsListFiltered[position] = "-1";
                                                rangesListFiltered[position] = -1;
                                                if (!isLoading) {
                                                    switchSkillSQL(skillsListBackup[position], 0);
                                                }
                                            }
                                            saveSkills();
                                            console.log("skillsListFiltered[" + position + "] = " +
                                                skillsListFiltered[position]);
                                            console.log("rangesListFiltered[" + position + "] = " +
                                                rangesListFiltered[position]);
                                            console.log("skillsListFiltered: " + skillsListFiltered);
                                            console.log("rangesListFiltered addSkills: " +
                                                rangesListFiltered);
                                        });
                                        $("#range" + skillID).change(function () {
                                            var thisID = String($(this).attr('id')).substring('level'
                                                .length);
                                            var level = $(this).val();
                                            var skillName = $("#th" + thisID).html()
                                            $("#level" + thisID).html(level);
                                            if (level == 5 && !uuid) {
                                                // backhere
                                                hideAll("Predicting the Next Skills you can Improve at");
                                                $.ajax({
                                                    url: '/predict',
                                                    data: {
                                                        skill: skillName,
                                                        userid: uid,
                                                        email: uEmail
                                                    },
                                                    type: 'POST',
                                                    jsonpCallback: 'callback',
                                                    success: function (data) {
                                                        var newSkills = JSON.stringify(data
                                                            .message);
                                                        newSkills = JSON.stringify(newSkills
                                                                .substring(3, newSkills.length -
                                                                    3)).replace(/['"]+/g, '')
                                                            .replace(/\\|\//g, '');
                                                        showAll();
                                                        foundNewSkills(newSkills);
                                                        $("#sResults").css("display", "none");
                                                    },
                                                    error: function (xhr, status, error) {
                                                        showAll();
                                                        $("#sResults").css("display", "none");
                                                        console.log('Error predict: ' + error
                                                            .message);
                                                    },
                                                });
                                            }
                                            var position = Array.prototype.slice.call(document
                                                .getElementById(
                                                    'skills').children).indexOf(document.getElementById(
                                                'tr' +
                                                thisID)); //do this using vanilla js
                                            console.log("position: " + position);
                                            rangesList.splice(position, 1, {
                                                value: level
                                            }.value);

                                            rangesListBackup.splice(position, 1, {
                                                value: level
                                            }.value);

                                            rangesListFiltered.splice(position, 1, {
                                                value: level
                                            }.value);

                                            console.log("rangesList[position] = " + rangesList[position]);
                                            console.log("rangesList = " + rangesList);
                                            editSQLSkill(skillName, level);
                                            saveSkills();
                                            $("#filters").hide();
                                            $("#paginator").hide();
                                            $("#learningResources").hide();
                                            $("#learningResources").empty();
                                            $("#sResultsDiv").hide();
                                        });
                                        $("#del" + skillID).click(function () {
                                            var thisID = String($(this).attr('id')).substring('del'.length);
                                            var removedItem = $("#th" + thisID).text();
                                            const index = skillsListBackup.indexOf(removedItem);
                                            console.log("attempting to delete: " + thisID);
                                            if (index > -1) {
                                                console.log("managed to delete");
                                                //here add sql delete if user is logged in
                                                delSQLSkill(removedItem);
                                                //
                                                skillsList.splice(index, 1);
                                                skillsListBackup.splice(index, 1);
                                                rangesList.splice(index, 1);
                                                rangesListBackup.splice(index, 1);
                                                positionsList.splice(index, 1);

                                                skillsListFiltered.splice(index, 1);
                                                rangesListFiltered.splice(index, 1);
                                                saveSkills();
                                            } else {
                                                console.log("could not delete");
                                            }
                                            console.log(skillsList);

                                            $("#tr" + thisID).fadeOut(150, function () {
                                                $(this).remove();
                                            });
                                            $("#paginator").hide();
                                            $("#filters").hide();
                                            $("#sResultsDiv").hide();
                                            $("#learningResources").hide();
                                            $("#learningResources").empty();
                                            if (skillsListFiltered.length <= 0) $("#wdiln").fadeOut(150);
                                        });
                                        skillsListBackup.push(predictedSkill);
                                        rangesListBackup.push(1);
                                        skillsListFiltered.push(predictedSkill);

                                        // skillID = skillsListBackup.length;
                                        skillID++;

                                        //backhere bug this is empty for non-registered users
                                        if (!uuid) {
                                            console.log("AHAAAAAAAAAAAAAAAAAA");
                                            rangesListFiltered.push(skillRange);
                                        }

                                        if (!isLoading) {
                                            console.log("rangesListFiltered loading: " + rangesListFiltered);
                                            skillsList.push(
                                                predictedSkill); //make it into a dictionary {"skill":levelnum}
                                            rangesList.push(1);
                                            positionsList.push(skillsList.length - 1);
                                            rangesListFiltered.push(1);
                                            if (rangesListFiltered.length > rangesList.length) rangesListFiltered
                                                .length = rangesList.length;
                                            // rangesListFiltered[rangesList.length-1] = 1;
                                            //here add sql insert if user is logged in
                                            addNewSQLSkill();
                                        }
                                        saveSkills();
                                        console.log(skillsList);
                                        console.log(rangesList);
                                        console.log(positionsList);
                                        console.log("rangesListFiltered SaveSkill: " + rangesListFiltered);
                                        predictedSkill = "";
                                        skillRange = 1;
                                    }
                                    // Get the hideable
                                    var hideable = document.getElementById('nextSkill');
                                    // When the user clicks anywhere outside of the hideable, close it
                                    function showAll(isInject = false) {
                                        if(!isInject){
                                            $("#sResultsDiv").show();
                                            hideable.style.display = "none";
                                            $("#sFilters").show().fadeTo(150, 1).delay(
                                                10000)
                                                .fadeTo(150, 0);
                                                $("#pagBot").show();
                                                $("#recommendation").show();
                                                $("#learningResources").show();
                                        }
                                        $("#allContent").show();
                                        $("#topNav").show();
                                        $("#userInfo").show();
                                        $("#plzWait").hide();
                                        $("#loading").hide();
                                        $("#newSkillsContainer").empty();
                                        $("#searcharea").show();
                                        $("#skils-section").show();
                                        $("#siteName").show();
                                        $("#injectLink").show();
                                        $("#wdiln").show();
                                        $("#url").show();
                                        $("#linkInjectorContainer").show();
                                        $("#educational").show();
                                    }

                                    function hideAll(msg = "") {
                                        hideable.style.display = "none";
                                        $("#allContent").hide();
                                        $("#sFilters").hide();
                                        $("#topNav").hide();
                                        $("#userInfo").hide();
                                        $("#plzWait").show();
                                        $("#newSkillsContainer").empty();
                                        $("#learningResources").empty();
                                        $("#learningResources").hide();
                                        $("#searcharea").hide();
                                        $("#recommendation").hide();
                                        $("#pagBot").hide();
                                        $("#skils-section").hide();
                                        $("#siteName").hide();
                                        $("#injectLink").hide();
                                        $("#wdiln").hide();
                                        $("#url").hide();
                                        $("#linkInjectorContainer").hide();
                                        $("#educational").hide();
                                        $("#loading").css('display', 'block');
                                        $("#loading").show();
                                        $("#sResultsDiv").hide();
                                        $("#msg").text(msg);
                                    }
                                    window.onclick = function (event) {
                                        if (event.target == hideable) {
                                            showAll(true);
                                        }
                                    }
                                </script>
                                <% var user; %>
                                <%if (user) { %>
                                <script>
                                    function loadSkills() {
                                        var loadedSkills = "<%= userSkills; %>"; //for json
                                        if (!loadedSkills) {
                                            console.log("NULL");
                                            isLoading = false;
                                            return;
                                        }
                                        loadedSkills = JSON.parse(loadedSkills.replace(/&#34;/g, "\""));
                                        var skillOptions = document.getElementById("options-img");
                                        var so = skillOptions.nextElementSibling;
                                        so.style.display = "block";
                                        if (loadedSkills.length > 0) {
                                            $("#wdiln").show();
                                            console.log("There exists storage");
                                        } else {
                                            $("#wdiln").hide();
                                            isLoading = false;
                                            return;
                                        }
                                        for (var i = 0; i < loadedSkills.length; i++) {
                                            const element = loadedSkills[i];
                                            predictedSkill = element.name;
                                            skillRange = element.level;
                                            skillIsOn = element.ison;
                                            console.log("skillRange = " + skillRange);
                                            console.log("predictedSkill = " + predictedSkill);
                                            addSkills();
                                            if (element.ison == 0) {
                                                console.log("isOn: " + element.ison);
                                                $("#tr" + i).fadeTo(150, 0.4);
                                                $("#cb" + i).trigger('click');
                                            }
                                        }
                                        console.log("skillsListFiltered: " + skillsListFiltered);
                                        console.log("rangesListFiltered loadSkills: " + rangesListFiltered);
                                        isLoading = false;
                                    }

                                    function editSQLSkill(skillName, newRange) {
                                        var editSkill = {
                                            name: skillName,
                                            level: newRange,
                                            userid: "<%- user.id; %>",
                                            email: "<%- user.email; %>"
                                        };
                                        $.ajax({
                                            url: '/editSkill',
                                            data: editSkill,
                                            type: 'POST',
                                            jsonpCallback: 'callback',
                                            success: function (data) {
                                                console.log("Edited Skill");
                                            },
                                            error: function (xhr, status, error) {
                                                console.log('Error editSQLSkill: ' + error.message);
                                            },
                                        });
                                    }

                                    function delSQLSkill(removedItem) {
                                        var delSkill = {
                                            name: removedItem,
                                            userid: "<%- user.id; %>",
                                            email: "<%- user.email; %>"
                                        };
                                        $.ajax({
                                            url: '/delSkill',
                                            data: delSkill,
                                            type: 'POST',
                                            jsonpCallback: 'callback',
                                            success: function (data) {
                                                console.log("Deleted Skill");
                                            },
                                            error: function (xhr, status, error) {
                                                console.log('Error delSQLSkill: ' + error.message);
                                            },
                                        });
                                    }

                                    function addNewSQLSkill() {
                                        var isLoggedIn = "<%- user; %>";
                                        console.log("isLoggedIn = " + isLoggedIn);
                                        if (isLoggedIn != null) {
                                            var addSkill = {
                                                name: predictedSkill,
                                                level: 1,
                                                position: positionsList[positionsList.length - 1],
                                                userid: "<%- user.id; %>",
                                                email: "<%- user.email; %>"
                                            };
                                            $.ajax({
                                                url: '/skills',
                                                data: addSkill,
                                                type: 'POST',
                                                jsonpCallback: 'callback',
                                                success: function (data) {
                                                    console.log("Added Skill");
                                                },
                                                error: function (xhr, status, error) {
                                                    console.log('Error skills: ' + error.message);
                                                },
                                            });
                                        }
                                    }

                                    function switchSkillSQL(skill, isSwitchedOn) {
                                        var switchedSkill = {
                                            name: skill,
                                            isOn: isSwitchedOn,
                                            userid: "<%- user.id; %>",
                                            email: "<%- user.email; %>"
                                        };
                                        $.ajax({
                                            url: '/switchSkill',
                                            data: switchedSkill,
                                            type: 'POST',
                                            jsonpCallback: 'callback',
                                            success: function (data) {
                                                console.log("Swtiched Skill");
                                            },
                                            error: function (xhr, status, error) {
                                                console.log('Error switchSkillSQL: ' + error.message);
                                            },
                                        });
                                    }

                                    function saveSkills() {
                                        console.log("nah dude saveSkills");
                                    }

                                    // Links Pocket_____________________________
                                    const monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
                                    ];
                                    var linksPocketID = 0;
                                    var lrList = [];

                                    function addRating(elem = null, isReloading = false, isInject = false) {
                                        if (!('rating' in elem)) {
                                            elem = null;
                                        }
                                        if (isInject) {
                                            for (var i = 0; i < lrList.length; i++) {
                                                if (lrList[i].id == elem.lrid) return;
                                            }
                                        }
                                        console.log("Didn't pass through the if statement");
                                        // <!-- updates date if the user visisted the link again -->
                                        // <!-- stars https://github.com/sabberworm/jStarbox -->
                                        var d, day, month, year, lrLink, lrTitle, lrDesc, lrId, rating;
                                        if (elem != null) {
                                            console.log("elem is not null");
                                            // d = new Date(String(elem.date).replace(/-/g,"/"));
                                            d = new Date(elem.date);
                                            day = d.getDate();
                                            month = monthNames[d.getMonth()];
                                            year = d.getFullYear();
                                            lrLink = elem.link;
                                            lrTitle = elem.title;
                                            lrDesc = elem.description;
                                            lrId = elem.lrid;
                                            rating = elem.rating;
                                        } else {
                                            console.log("elem is null");
                                            d = new Date();
                                            day = d.getDate();
                                            month = monthNames[d.getMonth()];
                                            year = d.getFullYear();
                                            lrLink = $(this).attr('href');
                                            lrTitle = $(this).text();
                                            lrDesc = $(this).parent().parent().children()[1].innerText;
                                            lrId = $(this).parent().parent().children()[1].getAttribute("id")
                                                .substring(
                                                    'lrId'.length);
                                            rating = 2.5;
                                        }
                                        console.log("\nlrLink = " + lrLink + "\nlrTitle = " + lrTitle +
                                            "\nlrDesc = " +
                                            lrDesc + "\nlrId = " + lrId + "\nday = " + day);
                                        var lrTitleShortened = lrTitle.slice(0);
                                        if (lrTitleShortened.length > 61) {
                                            lrTitleShortened = lrTitleShortened.slice(0, 61).concat("...");
                                        }
                                        $("#linksPocket").prepend(
                                            '<tr><td class="learningresources" style="width: 65%;">' + month + ' ' +
                                            day +
                                            ', ' + year +
                                            ':<a id="lp' + linksPocketID + '" href="' + lrLink + '"' +
                                            ' title="' +
                                            lrTitle +
                                            '" target="_blank">' + lrTitleShortened + '</a></td>' +
                                            '<td><div class="block"><div id="star' + linksPocketID +
                                            '" class="starbox ghosting autoupdate"><div class="positioner rated">' +
                                            '<div class="stars"><div class="ghost" style="width: 95px;' +
                                            ' display: none;"></div><div class="colorbar" style="width: 95px;"></div><div class="star_holder"><div ' +
                                            'class="star star-0"></div><div class="star star-1"></div><div class="star star-2"></div><div class="star star-3">' +
                                            '</div><div class="star star-4"></div></div></div></div></div></div></td></tr>'
                                        );
                                        $("#star" + linksPocketID).hide().fadeIn();
                                        const lr = {
                                            id: lrId,
                                            title: lrTitle,
                                            desc: lrDesc,
                                            link: lrLink,
                                            rating: rating,
                                            date: d
                                        };
                                        if (!isReloading) {
                                            lrList.push(lr);
                                        }
                                        // (C)RUD SQL
                                        if (elem == null || isInject) {
                                            // https://stackoverflow.com/questions/5129624/convert-js-date-time-to-mysql-datetime/5133807
                                            addSQLLink(d.toISOString().slice(0, 19).replace('T', ' '));
                                        }
                                        //rating
                                        var starbox = $("#star" + linksPocketID);
                                        starbox.starbox({
                                            // average: starbox.attr('data-start-value'),
                                            average: rating / 5,
                                            changeable: starbox.hasClass('unchangeable') ? false : starbox
                                                .hasClass(
                                                    'clickonce') ? 'once' : true,
                                            ghosting: starbox.hasClass('ghosting'),
                                            autoUpdateAverage: starbox.hasClass('autoupdate'),
                                            buttons: starbox.hasClass('smooth') ? false : starbox.attr(
                                                'data-button-count') || 10,
                                            stars: starbox.attr('data-star-count') || 5
                                        }).bind('starbox-value-changed', function (event, value) {
                                            const starID = String($(this).attr('id')).substring('star'
                                                .length);
                                            editRatingSQLLink(value * 5, lrList[starID].id);
                                        });
                                        $("#lp" + linksPocketID).click(function () {
                                            const lpID = String($(this).attr('id')).substring('lp'.length);
                                            updateDateSQLLink(new Date().toISOString().slice(0, 19).replace(
                                                'T',
                                                ' '), lrList[lpID].id);
                                        });
                                        linksPocketID++;
                                    }

                                    function editRatingSQLLink(rating, lrid) {
                                        var editRating = {
                                            lrid: lrid,
                                            rating: rating,
                                            userid: "<%- user.id; %>",
                                            email: "<%- user.email; %>"
                                        };
                                        $.ajax({
                                            url: '/rlinkspocket',
                                            data: editRating,
                                            type: 'POST',
                                            jsonpCallback: 'callback',
                                            success: function (data) {
                                                console.log("Edited Rating");
                                            },
                                            error: function (xhr, status, error) {
                                                console.log('Error editRatingSQLLink: ' + error
                                                    .message);
                                            },
                                        });
                                    }

                                    function updateDateSQLLink(date, lrid) {
                                        var updateDate = {
                                            lrid: lrid,
                                            date: date,
                                            userid: "<%- user.id; %>",
                                            email: "<%- user.email; %>"
                                        };
                                        $.ajax({
                                            url: '/ulinkspocket',
                                            data: updateDate,
                                            type: 'POST',
                                            jsonpCallback: 'callback',
                                            success: function (data) {
                                                console.log("Edited Rating");
                                            },
                                            error: function (xhr, status, error) {
                                                console.log('Error updateDateSQLLink: ' + error
                                                    .message);
                                            },
                                        });
                                    }

                                    function addSQLLink(lrDate) {
                                        console.log("lrDate = " + lrDate);
                                        var isLoggedIn = "<%- user; %>";
                                        console.log("isLoggedIn = " + isLoggedIn);
                                        if (isLoggedIn != null) {
                                            var newLink = {
                                                title: lrList[lrList.length - 1].title,
                                                desc: lrList[lrList.length - 1].desc,
                                                link: lrList[lrList.length - 1].link,
                                                date: lrDate,
                                                lrid: lrList[lrList.length - 1].id,
                                                userid: "<%- user.id; %>",
                                                email: "<%- user.email; %>"
                                            };
                                            $.ajax({
                                                url: '/clinkspocket',
                                                data: newLink,
                                                type: 'POST',
                                                jsonpCallback: 'callback',
                                                success: function (data) {
                                                    console.log("Added Link");
                                                },
                                                error: function (xhr, status, error) {
                                                    console.log('Error Link: ' + error.message);
                                                },
                                            });
                                        }
                                    }

                                    function loadLinks() {
                                        var loadedLinks = "<%= userLinks; %>"; //for json
                                        if (!loadedLinks) {
                                            console.log("NULL");
                                            return;
                                        }
                                        console.log("loadedLinks:" + loadedLinks);
                                        loadedLinks = JSON.parse(loadedLinks.replace(/&#34;/g, "\""));
                                        if (loadedLinks.length > 0) {
                                            var skillOptions = document.getElementById("img1");
                                            var so = skillOptions.nextElementSibling;
                                            so.style.display = "block";
                                        } else {
                                            return;
                                        }
                                        for (var i = 0; i < loadedLinks.length; i++) {
                                            const element = loadedLinks[i];
                                            console.log("linksPocket_________________________");
                                            addRating(element, false, false);
                                        }
                                    }

                                    function reloadLinks() {
                                        if (!lrList) {
                                            console.log("NULL");
                                            return;
                                        }
                                        $("#linksPocket").empty();
                                        for (var i = 0; i < lrList.length; i++) {
                                            const element = lrList[i];
                                            addRating(element, true, false);
                                        }
                                    }

                                    function isFree() {
                                        console.log("nah");
                                    }
                                </script>
                                <% } %>
                                <% if (!user){ %>
                                <script>
                                    function isFree() {
                                        $("#options-img").hide();
                                        $("#halp").attr("title",
                                            "Learning Resources Difficulty: \nLevel 1 & 2: Beginner\nLevel 3: Intermediate\nLevel 4: Advanced\nLevel 5: Advanced (Sign in to Unlock the Next Skill Prediction)"
                                        );
                                        $("#skils-section").prependTo("#siteName");
                                        $("#skillsContainer").removeClass("pure-u");
                                        $("#linkspocket").removeClass("pure-u");
                                        $("#middleContainer").removeClass("pure-u-2-5");
                                        $("#middleContainer").addClass("pure-u");
                                        $("#middleContainer").addClass("isfree");
                                    }
                                    //https://stackoverflow.com/questions/23327010/how-to-generate-unique-id-with-node-js
                                    const uuid = (new Date()).getTime().toString(36) + Math.random().toString(36)
                                        .slice(
                                            2)
                                    console.log("uuid: " + uuid);


                                    function loadSkills() {
                                        var skillLen = 0;
                                        if (typeof (Storage) !== "undefined") {
                                            if (localStorage.getItem("skillsList") == null) {
                                                isLoading = false;
                                                return;
                                            }
                                            skillsList = JSON.parse(localStorage.getItem("skillsList"));
                                            positionsList = JSON.parse(localStorage.getItem("positionsList"));
                                            rangesList = JSON.parse(localStorage.getItem("rangesList"));
                                            rangesListFiltered = JSON.parse(localStorage.getItem(
                                                "rangesListFiltered"));
                                            console.log("skillsList = " + skillsList);
                                            console.log("positionsList = " + positionsList);
                                            console.log("rangesList = " + rangesList);
                                            console.log("rangesListFiltered localStorage = " + rangesListFiltered);
                                            skillLen = skillsList.length
                                            var skillOptions = document.getElementById("options-img");
                                            var so = skillOptions.nextElementSibling;
                                            so.style.display = "block";
                                            if (skillLen > 0) {
                                                console.log("There exists storage");
                                                $("#wdiln").show();
                                            }
                                        } else {
                                            console.log("No support for Web Storage");
                                            $("#wdiln").hide();
                                        }
                                        for (var i = 0; i < skillLen; i++) {
                                            predictedSkill = skillsList[i];
                                            skillRange = rangesList[i];
                                            console.log("predictedSkill = " + predictedSkill);
                                            addSkills();
                                        }
                                        if (rangesListFiltered.length < 1) {
                                            rangesListFiltered = rangesList.slice();
                                        }
                                        console.log("rangesListFiltered before for: " + rangesListFiltered);
                                        console.log("rangesListFiltered before for: " + rangesListFiltered.length);
                                        for (var i = 0; i < rangesListFiltered.length; i++) {
                                            if (rangesListFiltered[i] < 0) {
                                                $("#tr" + i).fadeTo(150, 0.4);
                                                $("#cb" + i).trigger('click');
                                            }
                                        }
                                        isLoading = false;
                                    }

                                    function loadLinks() {
                                        console.log("oops");
                                    }

                                    function switchSkillSQL(skill, isSwitchedOn) {
                                        console.log("nah dude");
                                    }

                                    function saveSkills() {
                                        //use to empty local session variables
                                        // skillsList.splice(0, skillsList.length);
                                        // positionsList.splice(0, positionsList.length);
                                        // rangesList.splice(0, rangesList.length);
                                        // rangesListFiltered = []
                                        if (typeof (Storage) !== "undefined") {
                                            localStorage.setItem('skillsList', JSON.stringify(skillsListBackup));
                                            localStorage.setItem('positionsList', JSON.stringify(positionsList));
                                            localStorage.setItem('rangesList', JSON.stringify(rangesList));
                                            localStorage.setItem('rangesListFiltered', JSON.stringify(
                                                rangesListFiltered));
                                            console.log("while saving rangesListfiltered 1: " + localStorage
                                                .getItem(
                                                    "rangesListFiltered"));
                                            console.log("while saving rangesListfiltered 2: " + JSON.parse(
                                                localStorage
                                                .getItem("rangesListFiltered")));
                                        } else {
                                            console.log("No support for Web Storage");
                                        }
                                    }

                                    function addNewSQLSkill() {
                                        console.log("nah dude addNewSQLSkill");
                                    }

                                    function editSQLSkill(skillName, newRange) {
                                        console.log("nah dude editSQLSkill");
                                    }

                                    function delSQLSkill(removedItem) {
                                        console.log("nah dude delSQLSkill");
                                    }

                                    function addRating(elem = null, isReloading = false, isInject = false) {
                                        console.log("nah dude addRating");
                                    }
                                </script>
                                <% } %>
                                <!-- search skills & add skills -->
                            </form>
                        </div>
                    </div>
                    <table>
                        <div id="skills" style="overflow-y: auto; max-height:258px;">
                        </div>
                    </table>
                </div>
            </div>

            <div class="pure-u-2-5 injector" id="middleContainer">
                <img src="./img/self-taught.png" alt="Self-Taught" width="148" height="148" />
                <h2 class="title">Self-Taught</h2>
                <br>
                <div id="siteName">
                    <% if (user){ %>
                    <div id="linkInjectorContainer">
                        <p id="plzWait">Please wait...</p>
                        <br>
                        <form id="linkSubmit" class="pure-form">
                            <div class="buttonwrapper">
                                <input type="url" name="url" id="url" class="pure-input-rounded"
                                    style="margin-bottom: 5.8%;"
                                    placeholder="Insert/Paste a link that taught you something"
                                    pattern="((^|, )(https://.*|http://.*))+$" size="40" required>
                                <!-- if we wanted to support http sites as well (not secure and will make us vulnerible)-->
                                <!-- pattern="https://.*" size="40" required> -->
                                <input type="image" class="injectbutton fade" name="submit" title="Insert Link"
                                    src="img/inject.png" width="32" height="27" form="linkSubmit" id="injectLink">
                            </div>
                        </form>
                    </div>
                    <% } %>
                    <br>
                    <input id="wdiln" style="display: none;" title="What Do I Learn Next?" src="img/search.png"
                        width="64" height="66" type="image" class="searchbtn fade" value="?" role="button">
                </div>
            </div>
            <div class="pure-u linkspocket">
                <% if (!user){ %>
                <div style="top: 0; right: 0;position: absolute;">
                    <table>
                        <tr>
                            <td style="text-align:center">
                                <img onclick=clickedLogin() src="img/icon-new.png" width="64" height="64" />
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align:center">
                                <h5 style="color: #767676;">Sign in to Unlock <br> the Full Experience</h5>
                            </td>
                        </tr>
                    </table>
                </div>
                <script>
                    var uid = null;
                    var uEmail = null;
                </script>
                <% } %>

                <%if (user) { %>
                <script>
                    var uid = "<%- user.id; %>";
                    var uEmail = "<%- user.email; %>";
                    const uuid = null;
                </script>
                <div id="topNav" style="text-align: right;">
                    <img id="img1" title="Learning Resources History" class="collapsible fade" src="./img/skills.png"
                        width="64" height="64" />
                    <div id="links-section" class="links learningresources"
                        style="overflow-y: auto; max-height:300px;text-align: left;">
                        <!-- <h3>Learning Resources</h3> -->
                        <!-- insert injected links here, example: -->
                        <h3>Learning History:</h3>
                        <!-- â–³ â–½  -->
                        <table>
                            <thead>
                                <tr>
                                    <td>
                                        <a href="#" id="dateSort">Date <span>â–½</span></a>
                                    </td>
                                    <td>
                                        <a href="#" id="ratingSort">Rating <span>â–³</span></a>
                                    </td>
                                </tr>
                            </thead>
                            <tbody id="linksPocket">
                            </tbody>
                        </table>
                    </div>
                </div>
                <script>
                    // figure out this sorting issue, do it in an object array
                    // do the pagination in the front-end
                    //arrow up means ascending, arrow down means descending
                    //when adding a new link into the links pocket, it won't be in the correct order
                    //https://stackoverflow.com/questions/1069666/sorting-object-property-by-values
                    $("#dateSort").click(function () {
                        event.preventDefault();
                        $("#dateSort").children().show();
                        if ($(this).children()[0].innerText == "â–³") {
                            $(this).children()[0].innerText = "â–½";
                            lrList.sort(function (a, b) {
                                return a.date - b.date;
                            });
                        } else {
                            $(this).children()[0].innerText = "â–³";
                            lrList.sort(function (a, b) {
                                return b.date - a.date;
                            });
                        }
                        $("#ratingSort").children().hide();
                        reloadLinks();
                    });
                    $("#ratingSort").click(function () {
                        event.preventDefault();
                        $("#ratingSort").children().show();
                        if ($(this).children()[0].innerText == "â–³") {
                            $(this).children()[0].innerText = "â–½";
                            lrList.sort(function (a, b) {
                                return a.rating - b.rating;
                            });
                        } else {
                            $(this).children()[0].innerText = "â–³";
                            lrList.sort(function (a, b) {
                                return b.rating - a.rating;
                            });
                        }
                        $("#dateSort").children().hide();
                        reloadLinks();
                    });
                </script>
                <% } %>
            </div>
        </div>
        <!-- </div> -->



    </main>
    <div id="searcharea" class="searcharea">
        <div id="recommendation">
            <div class="pure-g" id="filters" style="display: none;">
                <div class="pure-u-1-3">
                    <h4 id="sFilters">Filters:</h4>
                    <div style="width: 100%;" class="filters"></div>
                    <button id="filterall" title="" class="pure-button filter">All</button>
                    <button id="filteroc" class="pure-button filter">Online Course</button>
                    <button id="filterqa" class="pure-button filter">Questions & Answers</button>
                    <button id="filtervid" class="pure-button filter">Video</button>
                    <br>
                    <button id="filterbook" class="pure-button filter">Book</button>
                    <button id="filterquiz" class="pure-button filter">Quizzes & Exams</button>
                    <button id="filterarticle" class="pure-button filter">Article</button>
                    <button id="filterforum" class="pure-button filter">Forum</button>
                    <button id="filterpodcast" class="pure-button filter">Podcast</button>
                </div>
            </div>
        </div>
        <br><br>
        <div class="pure-g">
            <div class="pure-u-1-1">
                <div id="pagTop">
                    <div id="paginator">
                    </div>
                </div>
                <div id="sResultsDiv">
                    <h4 id="sResults" style="display: none;">Search Results:</h4>
                </div>
                <table id="learningResources">
                </table>
                <br><br>
                <div id="pagBot">
                </div>
            </div>
        </div>
        <script>
            function cleanData() {
                $.ajax({
                    url: '/clean',
                    data: {
                        uniqueID: uuid,
                        userid: uid,
                        email: uEmail
                    },
                    type: 'POST',
                    jsonpCallback: 'callback',
                    success: function (data) {
                        console.log("cleaned");
                    },
                    error: function (xhr, status, error) {

                        console.log('Error login: ' + error.message);
                    },
                });
            }
            //concluded Skill
            $("#plzWait").hide();
            $("#loading").hide();
            $("#linkSubmit").submit(function () {
                event.preventDefault();
                const injectedLink = $("#url").val();
                // if(injectedLink.length < 10) return;
                console.log("injectedLink: " + injectedLink);
                $("#plzWait").text("Please wait...");
                $("#plzWait").show();
                hideAll("Guessing what you're trying to Learn");
                $.ajax({
                    url: '/link',
                    data: {
                        url: injectedLink
                    },
                    type: 'POST',
                    jsonpCallback: 'callback',
                    success: function (data) {
                        var newSkills = JSON.stringify(data.message);
                        console.log(newSkills);
                        newSkills = JSON.stringify(newSkills.substring(3, newSkills.length - 3))
                            .replace(/['"]+/g, '').replace(/\\|\//g, '');
                        console.log(newSkills);
                        $("#url").val("")
                        showAll(true);
                        foundNewSkills(newSkills);
                        var lrObj = JSON.parse(data.lrObj);
                        console.log(lrObj);
                        //third should be true
                        addRating(lrObj, false, true);
                    },
                    error: function (xhr, status, error) {
                        console.log(status);
                        console.log(error);
                        showAll(true);
                        var userAj = "<%- user; %>";
                        if (userAj) {
                            $("#plzWait").text("Error: Please retry or insert another link").delay(
                                    10000)
                                .fadeOut(150);
                        } else {
                            $("#plzWait").text("Error: Must be logged in to Insert Links").delay(
                                    10000)
                                .fadeOut(150);
                        }
                        $("#plzWait").show();
                        // window.location.href = "/login";
                        console.log('Error login: ' + error.message);
                    },
                });
            });

            //predict
            function foundNewSkills(newSkills) {

                var newSkillsID = 0;
                console.log("newSkills: " + newSkills);
                if (newSkills == "") {
                    return;
                }
                document.getElementById('nextSkill').style.display = 'block';
                var newSkillsArr = newSkills.split(",");

                $.each(newSkillsArr, function (index, value) {
                    $("#newSkillsContainer").append('<button type="button" id="newSkillBtn' + newSkillsID +
                        '" class="pure-button cancelbtn">' + value + '</button>');
                    $("#newSkillBtn" + newSkillsID).click(function () {

                        predictedSkill = $(this).text();
                        $("#select-skill").trigger('change');
                        // $("#select-skill").val($(this).text()).trigger('change'); //didn't work
                        showAll();
                    });
                    newSkillsID++;
                });
                $("#siteName").hide();
                $("#injectLink").hide();
                $("#wdiln").hide();
                $("#linkInjectorContainer").hide();
                $("#url").hide();
                $("#skils-section").hide();
            }
            //wdiln
            $("#wdiln").click(recommend);

            var LRType = "Any";
            $("#filterall").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Any";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filteroc").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Online Course";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filterarticle").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Article";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filterbook").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Book";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filterqa").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Questions & Answers";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filtervid").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Video";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filterpodcast").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Podcast";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filterforum").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Forum";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });
            $("#filterquiz").click(function () {
                filterFadeBack();
                $(this).fadeTo(150, 1);
                LRType = "Quizzes & Exams";
                console.log(LRType);
                $("#wdiln").trigger('click');
            });

            function filterFadeBack() {
                $("#filters").hide();
                $("#paginator").hide();
                $("#learningResources").hide();
                $("#sResultsDiv").hide();
                // $("#learningResources").empty();
                $("#filterall").fadeTo(150, 0.4);
                $("#filterpodcast").fadeTo(150, 0.4);
                $("#filtervid").fadeTo(150, 0.4);
                $("#filterqa").fadeTo(150, 0.4);
                $("#filterbook").fadeTo(150, 0.4);
                $("#filterarticle").fadeTo(150, 0.4);
                $("#filteroc").fadeTo(150, 0.4);
                $("#filterforum").fadeTo(150, 0.4);
                $("#filterquiz").fadeTo(150, 0.4);
            }

            function recommend() {
                event.preventDefault();
                if (skillsListBackup.length < 1) {
                    $("#plzWait").text("Cannot recommend Learning Resources, please add a skill to the skills section")
                        .delay(10000).fadeOut(150);
                    $("#plzWait").show();
                    return;
                } else {
                    $("#plzWait").hide();
                }
                var limit = 10;
                var currPage = 1;
                console.log("$(this).attr('id') = " + $(this).attr('id'));
                if ($(this).attr('id') != "wdiln" && $(this).attr('id') != "pgf") {
                    console.log(String($(this).attr('id')).substring('pg'.length));
                    currPage = parseInt(String($(this).attr('id')).substring('pg'.length));
                }
                console.log("currPage = " + currPage);
                console.log(skillsListBackup);

                // $("#learningResources").empty();
                if (!$(this).attr('id').includes("pg")) {
                    hideAll("Searching");
                }
                $.ajax({
                    url: '/recommend?page=' + currPage + '&limit=' + limit,
                    data: {
                        skillsListFiltered,
                        rangesListFiltered,
                        learningResourceType: LRType,
                        uniqueID: uuid,
                        userid: uid,
                        email: uEmail
                    },
                    type: 'POST',
                    jsonpCallback: 'callback',
                    success: function (data) {
                        $("#sResults").show().fadeTo(150, 1).delay(
                                10000)
                            .fadeTo(150, 0);
                        showAll();

                        // var resources = JSON.stringify(data.message);
                        var resources = data.message;
                        // console.log("resources: " + JSON.stringify(resources));
                        // console.log("resources: " + resources['results'].length);

                        $("#learningResources").empty();
                        $.each(resources['results'], function (i, value) {
                            var descShortened = String(resources['results'][i].description);
                            var titleShortened = String(resources['results'][i].title);
                            // if (descShortened.length > 150) {
                            //     descShortened = descShortened.slice(0, 150).concat("...");
                            // }
                            // if (titleShortened.length > 61) {
                            //     titleShortened = titleShortened.slice(0, 61).concat("...");
                            // }
                            //test the learning resources if they're in the right order using prepend or append
                            // $("#learningResources").prepend('<tr><td><div><h3><a id="lr' + i +
                            $("#learningResources").append('<tr><td><div><h3><a id="lr' + i +
                                '" href="' + resources['results'][i].link +
                                '" target="_blank">' +
                                titleShortened + '</a>&nbsp;<span>(' +
                                resources['results'][i].type + ')</span></h3><p id="lrId' +
                                resources['results'][i].lrId + '">' + descShortened +
                                '</p></div></td></tr>'
                            );
                            $("#lr" + i).on('mouseup', addRating);
                            //not concerned with what's down there
                            if (i > 10) {
                                return false;
                            }
                        });
                        $("#learningResources").hide().fadeIn();

                        var pgNum = 1;
                        $("#filters").show();
                        $("#paginator").show();
                        $("#paginator").empty();
                        if (resources['next']) {
                            pgNum = (resources['next']['page'] - 1);
                        } else if (resources['previous']) {
                            pgNum = (resources['previous']['page'] + 1);
                        }

                        $("#paginator").append(
                            '<button id="pgf" class="pure-button pagebtn">First</button>'); //worked
                        $("#pgf").click(recommend);

                        if (resources['previous']) {
                            $("#paginator").append('<button id="pg' + (pgNum - 1) +
                                '" class="pure-button pagebtn">' + (pgNum - 1) +
                                '</button>');
                            $("#pg" + (pgNum - 1)).click(recommend);
                        }

                        $("#paginator").append('<button style="background-color:#ccc;" id="pg' + pgNum +
                            '" class="pure-button pagebtn">' +
                            pgNum + '</button>');
                        $("#pg" + pgNum).click(recommend);

                        if (resources['next']) {
                            $("#paginator").append('<button id="pg' + (pgNum + 1) +
                                '" class="pure-button pagebtn">' + (pgNum + 1) +
                                '</button>');
                            $("#pg" + (pgNum + 1)).click(recommend);
                        }
                        $("#paginator").append('<button id="pg' + (resources['allPages'] + 1) +
                            '" class="pure-button pagebtn">Last</button>');
                        $("#pg" + (resources['allPages'] + 1)).click(recommend);

                        document.getElementById('wdiln').scrollIntoView({
                            behavior: "smooth",
                            block: "start",
                            inline: "nearest"
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log('Error recommend: ' + error.message);
                    },
                });

                //those are the opposite?
                $(document).on('scroll', function () {
                    if ($(this).scrollTop() >= $('#sResults').position().top) {
                        $("#paginator").prependTo("#pagBot");
                    } else {
                        $("#paginator").prependTo("#pagTop");
                    }
                });
            }

            //skills collapse
            var coll = document.getElementsByClassName("collapsible");
            var i;

            for (i = 0; i < coll.length; i++) {
                coll[i].addEventListener("click", function () {
                    this.classList.toggle("active");
                    var content = this.nextElementSibling;
                    if ($(content).is(":visible")) {
                        $(content).fadeOut(150);
                    } else {
                        $(content).fadeIn();
                    }
                });
            }
            //recommendation open
        </script>
    </div>

    <br><br><br><br>
    <br><br><br>
</body>
<footer style="margin-right: 40px;">
    <%if (user) { %>
    <div id="userInfo" style="min-width: max-content;">
        <span>
            Signed in as <%= user.name %> <a href="/acc/logout">[Logout]</a>
        </span>
    </div>
    <% } %>
    <p id="educational" class="educational">All information used is for educational purposes</p>
</footer>

</html>